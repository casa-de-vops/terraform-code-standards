# .github/workflows/trigger.yml
name: Trigger Terraform Orchestration

on:
  push:
    branches:
      - github_actions
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  login:
    name: Login Test
    runs-on: ubuntu-latest
    environment: 'nonprod'
    steps:
      - name: Debug Secrets Access
        run: |
          echo "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"
          echo "AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}"
          echo "AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show    

  tf-orchestrations:
    uses: casa-de-vops/terraform-code-standards/.github/workflows/stages.deploy.yml@github_actions
    with:
      tf_version: 'latest'
      working_directory: './terraform/'
      environment: 'dev'
      gh_environment: 'nonprod'
      backend_service_connection: 'terraform'
      backend_azure_rm_resource_group_name: 'rg-terraform-ops'
      backend_azure_rm_storage_account_name: 'casadevopsterraform'
      backend_azure_rm_container_name: 'ops-terraform-state'
      backend_azure_rm_key: 'pipeline-test.dev.tfstate'
      plan_file_name: 'terraform.tfplan'
      var_file: './environments/dev.tfvars'