# .github/workflows/validate.yml
name: Terraform Plan

on:
  workflow_call:
    inputs:
      gh_environment:
        required: true
        type: string
      tf_version:
        required: false
        type: string
        default: 'latest'
      working_directory:
        required: true
        type: string
      backend_azure_rm_storage_account_name:
        required: true
        type: string
      backend_azure_rm_container_name:
        required: true
        type: string
      backend_azure_rm_key:
        required: true
        type: string
      backend_azure_rm_resource_group_name:
        required: true
        type: string
      plan_file_name:
        required: true
        type: string
      command_option_args:
        required: false
        type: string
        default: ''
      var_file:
        required: false
        type: string

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.gh_environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Load Variables from YAML
        id: load_vars
        run: |
          # Parse YAML file and export variables
          awk -F ": " '/:/{gsub(/ /, "", $1); gsub(/"/, "", $2); print $1"="$2}' versions/modules.${{ inputs.gh_environment }}.yml | while read var; do
            echo "Exporting $var"
            echo "$var" >> $GITHUB_ENV
          done
          
      - uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: '["**/*.tf"]'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Set Azure Environment Variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: |
          set -x
          terraform init -input=false \
          -backend-config="storage_account_name=${{ inputs.backend_azure_rm_storage_account_name }}" \
          -backend-config="container_name=${{ inputs.backend_azure_rm_container_name }}" \
          -backend-config="key=${{ inputs.backend_azure_rm_key }}" \
          -backend-config="resource_group_name=${{ inputs.backend_azure_rm_resource_group_name }}"
        working-directory: ${{ inputs.working_directory }}
      
      - name: Terraform Plan
        run: terraform plan -out=${{ inputs.plan_file_name }} -var-file=${{ inputs.var_file }} ${{ inputs.command_option_args }}
        working-directory: ${{ inputs.working_directory }}

      - name: Upload Terraform plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ${{ inputs.working_directory }}/${{ inputs.plan_file_name }}