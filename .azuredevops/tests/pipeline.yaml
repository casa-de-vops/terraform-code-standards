name: $(SourceBranchName)-$(Date:yyyyMMdd)-$(Rev:rrr)

trigger:
  batch: true
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - .azuredevops/tests/environments/*
      - .azuredevops/tests/*.tf
      - .azuredevops/tests/pipeline.yaml

resources:
  repositories:
    - repository: templates
      type: github
      name: 'casa-de-vops/terraform-code-standards'
      ref: 'refs/heads/main'
      endpoint: 'GitHub'
      mapping: '.azuredevops'

variables:
  - template: '../variables/variables.nonprod.yml'
  - template: '../versions/versions.nonprod.yml'
  - group: ssh_host #library group containing knownHostsEntry, sshPublicKey, sshPassphrase, sshKeySecureFile

stages:
  - template: .azuredevops/stages.deploy.yml@templates
    parameters:
      workload: terraform-pipeline
      working_directory: ./.azuredevops/tests/terraform
      environments: 
      - stage: Test_Global
        pool: default
        azure_service_connection: terraform
        tfvars_file: ../environments/dev.tfvars
        environment: test
        ado_environment: ado-test
        security_tools: '$(security_tools)'
        backend_service_connection: terraform
        backend_azure_rm_resource_group_name: rg-terraform-ops
        backend_azure_rm_storage_account_name: casadevopsterraform
        backend_azure_rm_container_name: ops-terraform-state      
        backend_azure_rm_key: stages.deploy.tfstate
        command_option_args: '-var command_option_args="$(input_variable)"'
        # destroy_mode: true
        # run_tfsec: false
        # run_msdefender: false
        # step_apply_command_option_args: '-no-color'