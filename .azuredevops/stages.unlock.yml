parameters:
  - name: workload
    type: string
  - name: environments
    type: object
  - name: working_directory
    type: string
    default: 'terraform'
  - name: tf_version
    type: string
    default: 'latest'
  - name: lock_id
    type: string

stages:
# TF Force-Unlock
- ${{ each environment in parameters.environments }}:
  - stage: ForceUnlock${{ environment.environment }}
    displayName: "Force-Unlock [${{ parameters.workload }}-${{ environment.environment }}]"
    dependsOn: []
    jobs:
      - job: TerraformForceUnlockJob
        displayName: 'Terraform Force-Unlock'
        # environment: '${{ parameters.workload }}-${{ environment.ado_environment }}'
        ${{ if variables['environment.pool'] }}:
          pool: ${{ variables['environment.pool'] }}
        ${{ if and(not(variables['environment.pool']), eq(variables['environment.vmImage'], '')) }}:
          pool:
            vmImage: $(default_agent_image)
        ${{ if and(not(variables['environment.pool']), ne(variables['environment.vmImage'], '')) }}:
          pool:
            vmImage: ${{ variables['environment.vmImage'] }}
        steps:
          - template: ../tasks/tf_install_task.yml
            parameters:
              tf_version: '${{ parameters.tf_version }}'
          - template: ./tasks/tf_init_task.yml
            parameters:
              working_directory: '$(System.DefaultWorkingDirectory)/${{ parameters.working_directory }}' 
              backend_service_connection: '${{ coalesce(environment.backend_service_connection, environment.azure_service_connection) }}'
              backend_azure_rm_resource_group_name: '${{ environment.backend_azure_rm_resource_group_name }}'
              backend_azure_rm_storage_account_name: '${{ environment.backend_azure_rm_storage_account_name }}'
              backend_azure_rm_container_name: '${{ environment.backend_azure_rm_container_name }}'
              backend_azure_rm_key: '${{ environment.backend_azure_rm_key }}' 
          - template: ../tasks/tf_unlock_task.yml
            parameters:
              azure_service_connection: '${{ environment.azure_service_connection }}'
              working_directory: '$(System.DefaultWorkingDirectory)/${{ parameters.working_directory }}' 
              lock_id: '${{ parameters.lock_id }}'